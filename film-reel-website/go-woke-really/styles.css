/* General body and page styling */
body {
    margin: 0;
    padding: 0;
    font-family: 'Abril Fatface', cursive; /* Apply to the whole body (optional) */
    background-image: url('images/film_stock.png'); /* Set film stock image as background */
    background-size: cover; /* Make sure the background covers the entire page */
    background-position: center; /* Center the background image */
    background-repeat: repeat-y; /* Repeating the background image */
    height: 100vh; /* Ensure the body takes the full viewport height */
}

/* Container for the film reel */
.film-reel {
    display: flex;
    flex-direction: column;  /* Stack frames vertically */
    align-items: center;
    margin-top: 20px; /* Adjust as needed */
}

/* Styling for each film frame */
.frame {
    position: relative;
    width: 80%; /* Adjust the width to suit your design */
    height: 600px; /* Adjust the height to suit your design */
    margin: 20px 0;
    background-color: #ffffff; /* Light gray background inside each frame */
    border: 10px solid black; /* Black border around each frame */
    border-radius: 5px; /* Slightly rounded corners */
    overflow: hidden;
    padding: 20px;
    font-family: 'Arial', sans-serif;
}

/* Title text in the first frame */
.first-frame .title {
    font-family: 'Abril Fatface', cursive; /* Apply Abril Fatface font */
    font-size: 3.5rem; /* Huge size for the title */
    text-align: center;
    color: #000;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 2;
    margin: 0;
    padding: 0;
    line-height: 1.2;
}

/* Content inside the frame */
.frame-content {
    padding: 20px;
    background-color: #ffffff; /* Light gray background for content */
    height: 100%;
    overflow: auto; /* If content exceeds frame, scroll */
}

/* Styling for the frame title */
.frame-title {
    font-family: 'Abril Fatface', cursive; /* Use Abril Fatface for the title */
    font-size: 2rem; /* Adjust title size */
    color: #000; /* Black text color */
    text-align: center; /* Center the title */
    margin-bottom: 20px; /* Add space below the title */
    z-index: 2; /* Ensure it appears above the noise video */
}

/* Styling for the frame content */
.frame-content p {
    font-family: Arial, sans-serif; /* Use a readable font for the paragraph */
    font-size: 1rem; /* Adjust paragraph font size */
    color: #333; /* Dark gray text color */
    line-height: 1.6; /* Improve readability */
    text-align: justify; /* Justify text for a cleaner look */
    z-index: 2; /* Ensure text appears above the video */
}

/* Styling for the map-slider container */
.map-slider {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Slider styling */
#map-slider {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80%;
    z-index: 3; /* Ensure slider stays above both map and video */
    max-width: 500px; /* Optional: Set max width for the slider */
}

/* Position the map image inside the slider container */
.map-image {
    width: 100%;
    height: 100%; /* Make the map fill the container */
    object-fit: contain; /* Ensures the map retains its aspect ratio */
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1; /* Map behind the video */
}

/* Styling for the map-slider container */
.map-slider {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

/* Noise video styling to ensure it stays on top but doesn't block the map */
.noise-video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover; /* Make sure the video covers the entire frame */
    opacity: 0.2; /* Adjust opacity to allow map visibility */
    z-index: 2; /* Video above the map */
    pointer-events: none; /* Make sure the video does not block the links */
}

/* Slider styling */
#map-slider {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80%;
    z-index: 3; /* Ensure slider stays above both map and video */
    max-width: 500px; /* Optional: Set max width for the slider */
}

/* Position the map image inside the slider container */
.map-image {
    width: 100%;
    height: 100%; /* Make the map fill the container */
    object-fit: contain; /* Ensures the map retains its aspect ratio */
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1; /* Map behind the video */
}


Partager


Vous avez dit :
index.html
Fichier
script.js
JavaScript
styles.css
Fichier
How can I make the steps of the different range appear on my slider tract?

ChatGPT a dit :

ChatGPT
To make the steps or divisions of different ranges appear on your slider track visually, you can add a gradient background to the slider track and style it to represent the divisions. Here's how you can achieve it:

Update the input[type="range"] track styling: You can use CSS properties like background with linear-gradient to create visible steps on the track. Each step can be represented by a change in the gradient.
Add Custom CSS for Steps: Add the following CSS to your styles.css:
input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 10px;
    background: linear-gradient(to right, #ddd, #ddd 33%, #aaa 33%, #aaa 66%, #ddd 66%);
    outline: none;
    border-radius: 5px;
    cursor: pointer;
}

input[type="range"]::-webkit-slider-runnable-track {
    background: linear-gradient(to right, #ddd, #ddd 33%, #aaa 33%, #aaa 66%, #ddd 66%);
    height: 10px;
    border-radius: 5px;
}

input[type="range"]::-moz-range-track {
    background: linear-gradient(to right, #ddd, #ddd 33%, #aaa 33%, #aaa 66%, #ddd 66%);
    height: 10px;
    border-radius: 5px;
}

input[type="range"]::-ms-track {
    background: linear-gradient(to right, #ddd, #ddd 33%, #aaa 33%, #aaa 66%, #ddd 66%);
    height: 10px;
    border-color: transparent;
    color: transparent;
}
Explanation:
The linear-gradient creates visual sections on the track.
Adjust the percentages (e.g., 33%, 66%) to match the range steps you need.
Colors like #ddd and #aaa alternate to create step distinctions.
Custom Step Labels (Optional): If you want to add labels for the steps, you can place them below the slider using HTML and CSS:
<div class="slider-container">
    <input type="range" min="1" max="3" value="1" id="custom-slider">
    <div class="step-labels">
        <span>Step 1</span>
        <span>Step 2</span>
        <span>Step 3</span>
    </div>
</div>
Add the following to your CSS:

.slider-container {
    position: relative;
    width: 100%;
}

.step-labels {
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
    font-size: 0.9rem;
}

.step-labels span {
    text-align: center;
    flex: 1;
}
This will display labels aligned with the slider steps.
Test and Adjust: Reload your webpage and ensure the steps and labels align correctly with the slider. Adjust the linear-gradient and percentages in the CSS for finer control.





Vous avez dit :
It is not really what I imagined. I would rather love to have indicators on the tract, for the user to know where they should drag the thumb, such that the image contained in the slider change to the other
ChatGPT a dit :

ChatGPT
To add indicators on the slider track for users to know where to drag the thumb to trigger an image change, you can use the following approach:

Approach
We’ll use CSS to add markers or ticks on the slider track and ensure these markers align with the values at which images change.

Here’s how you can do it:

Updated HTML
Wrap your slider with a container and use pseudo-elements to create tick marks.

<div class="slider-container">
    <input type="range" id="custom-slider" min="1" max="3" value="1" step="1">
    <div class="slider-ticks">
        <span>1</span>
        <span>2</span>
        <span>3</span>
    </div>
</div>
Updated CSS
Add styles to display tick marks and align them with the slider track.

/* Slider Container */
.slider-container {
    position: relative;
    width: 80%; /* Adjust based on your design */
    margin: 20px auto;
}

/* Custom Range Slider */
input[type="range"] {
    -webkit-appearance: none; /* Remove default styling */
    appearance: none;
    width: 100%;
    height: 10px; /* Height of the slider track */
    background: #ddd; /* Track color */
    outline: none;
    border-radius: 5px; /* Rounded edges for the track */
    cursor: pointer;
    position: relative; /* Enable tick marks */
}

/* Slider Track */
input[type="range"]::-webkit-slider-runnable-track {
    background: #ddd;
    height: 10px;
    border-radius: 5px;
    cursor: pointer;
}

input[type="range"]::-moz-range-track {
    background: #ddd;
    height: 10px;
    border-radius: 5px;
}

input[type="range"]::-ms-track {
    background: #ddd;
    height: 10px;
    border-color: transparent;
    color: transparent;
}

/* Custom Thumb */
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    background: #000; /* Thumb color */
    width: 20px;
    height: 20px;
    border-radius: 50%; /* Round thumb */
    cursor: pointer;
    margin-top: -5px; /* Center thumb vertically on track */
}

input[type="range"]::-moz-range-thumb {
    background: #000;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    cursor: pointer;
}

input[type="range"]::-ms-thumb {
    background: #000;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    cursor: pointer;
}

/* Ticks Container */
.slider-ticks {
    position: absolute;
    top: 20px; /* Adjust for spacing */
    left: 0;
    width: 100%;
    display: flex;
    justify-content: space-between;
}

.slider-ticks span {
    position: relative;
    display: inline-block;
    width: 10px;
    height: 10px;
    background: #333; /* Tick color */
    border-radius: 50%;
    text-align: center;
    color: #000;
    font-size: 0.8rem;
    margin-top: 5px; /* Adjust label positioning */
}
Key Features
Ticks on Track: The slider-ticks container creates evenly spaced tick marks (span elements) aligned with the slider's min, max, and step values.
Dynamic Alignment: The display: flex and justify-content: space-between in .slider-ticks ensure the ticks align proportionally to the track width.
Customizable Labels: The span elements inside .slider-ticks can include labels, numbers, or other indicators.
JavaScript (Optional)
You can also dynamically update the slider's value and associated images:

const slider = document.getElementById('custom-slider');
const diversityImage = document.getElementById('diversity-image');

slider.addEventListener('input', () => {
    const value = slider.value;
    diversityImage.src = `map/diversity/diversity${value}.jpg`; // Update image
});
Final Output
A slider with visible ticks aligned to each step.
Ticks give users a clear indicator of where to stop dragging the thumb.
Image updates dynamically as the thumb moves over each tick.
This solution enhances usability and aligns with your requirements.






Vous avez dit :
I'm sorry, but it's not what I asked
ChatGPT a dit :

ChatGPT
Apologies for misunderstanding earlier! You want visual indicators on the slider track itself, marking where users should stop to trigger changes (e.g., corresponding to image changes). Let me address that specifically:

Goal
Add ticks on the slider track itself to visually mark where the slider thumb should stop.

Steps to Implement
HTML

Keep your slider as-is, but you don’t need extra elements for ticks:

<div class="slider-container">
    <input type="range" id="custom-slider" min="1" max="3" value="1" step="1">
</div>
CSS

Use the background property of the slider's track (input[type="range"]) and pseudo-elements for the thumb and ticks.

/* Slider Container */
.slider-container {
    position: relative;
    width: 80%; /* Adjust width */
    margin: 20px auto;
}

/* Custom Range Slider */
input[type="range"] {
    -webkit-appearance: none; /* Remove default styling */
    appearance: none;
    width: 100%;
    height: 10px; /* Height of the slider track */
    background: linear-gradient(
        to right,
        #ddd 0%,
        #ddd 33%,
        #000 33%,
        #000 34%,
        #ddd 34%,
        #ddd 66%,
        #000 66%,
        #000 67%,
        #ddd 67%,
        #ddd 100%
    ); /* Add ticks */
    outline: none;
    border-radius: 5px; /* Rounded edges for the track */
    cursor: pointer;
}

/* Slider Thumb */
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    background: #000; /* Thumb color */
    width: 20px;
    height: 20px;
    border-radius: 50%; /* Round thumb */
    cursor: pointer;
    margin-top: -5px; /* Center thumb vertically */
}

input[type="range"]::-moz-range-thumb {
    background: #000;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    cursor: pointer;
}

input[type="range"]::-ms-thumb {
    background: #000;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    cursor: pointer;
}

/* Track Styling for Other Browsers */
input[type="range"]::-webkit-slider-runnable-track {
    background: transparent; /* Track is already styled above */
    height: 10px;
    border-radius: 5px;
    cursor: pointer;
}

input[type="range"]::-moz-range-track {
    background: transparent;
    height: 10px;
    border-radius: 5px;
}

input[type="range"]::-ms-track {
    background: transparent;
    height: 10px;
    border-color: transparent;
    color: transparent;
}
Explanation
Ticks on the Track:
The background: linear-gradient property creates visual ticks directly on the slider track by alternating colors (#ddd for default and #000 for ticks).
The percentage values (33%, 66%) align with the slider steps.
Thumb Styling:
The thumb is styled independently to remain visible above the track.
Cross-Browser Support:
Different browsers use ::-webkit-slider-runnable-track, ::-moz-range-track, and ::-ms-track. To ensure consistency, the main background styling is applied to the base input[type="range"].
Result
The slider track will have ticks aligned with the steps.
Users can see where they should stop dragging to trigger changes.
Would you like me to adjust this further for dynamic values or add interactivity for updating content when moving the slider?






Vous avez dit :
What would you change in that code to add ticks on the slider track itself to visually mark where the slider thumb should stop.

/* Universal Slider Styling */
input[type="range"] {
    -webkit-appearance: none; /* Remove default styling for WebKit browsers */
    appearance: none; /* Remove default styling */
    width: 100%; /* Full width */
    height: 10px; /* Height of the track */
    background: #ddd; /* Track background color */
    outline: none; /* Remove outline */
    border-radius: 5px; /* Rounded track edges */
}

/* Track Styling for WebKit Browsers */
input[type="range"]::-webkit-slider-runnable-track {
    background: #ddd; /* Track background */
    height: 10px; /* Track height */
    border-radius: 5px; /* Rounded edges */
    cursor: pointer; /* Pointer cursor */
}

/* Track Styling for Firefox */
input[type="range"]::-moz-range-track {
    background: #ddd; /* Track background */
    height: 10px; /* Track height */
    border-radius: 5px; /* Rounded edges */
}

/* Track Styling for Internet Explorer and Edge */
input[type="range"]::-ms-track {
    background: transparent; /* Remove default styling */
    height: 10px; /* Track height */
    border-color: transparent; /* Remove borders */
    color: transparent; /* Remove color */
}

/* Adjust for Safari Quirks */
input[type="range"]::-webkit-slider-thumb:active {
    transform: scale(1.05); /* Slight scale on interaction (optional) */
    cursor: grabbing; /* Grabbing cursor during drag (optional) */
}

/* Custom Track Styling */
input[type="range"]::-webkit-slider-runnable-track {
    background: #ddd; /* Track background */
    height: 10px;
    border-radius: 5px;
}

input[type="range"]::-moz-range-track {
    background: #ddd;
    height: 10px;
    border-radius: 5px;
}

input[type="range"]::-ms-track {
    background: transparent;
    border-color: transparent;
    color: transparent;
    height: 10px;
}
ChatGPT a dit :

ChatGPT
To add ticks on the slider track itself, you can update the code to include a linear gradient in the background property of the track. Each tick mark is represented by alternating colors at specific positions along the track.

Here's the modified code:

Updated Code with Ticks
/* Universal Slider Styling */
input[type="range"] {
    -webkit-appearance: none; /* Remove default styling for WebKit browsers */
    appearance: none; /* Remove default styling */
    width: 100%; /* Full width */
    height: 10px; /* Height of the track */
    background: linear-gradient(
        to right,
        #ddd 0%,
        #ddd 20%,
        #000 20%,
        #000 21%,
        #ddd 21%,
        #ddd 40%,
        #000 40%,
        #000 41%,
        #ddd 41%,
        #ddd 60%,
        #000 60%,
        #000 61%,
        #ddd 61%,
        #ddd 80%,
        #000 80%,
        #000 81%,
        #ddd 81%,
        #ddd 100%
    ); /* Alternating colors for ticks */
    outline: none; /* Remove outline */
    border-radius: 5px; /* Rounded track edges */
    cursor: pointer; /* Pointer cursor */
}

/* Track Styling for WebKit Browsers */
input[type="range"]::-webkit-slider-runnable-track {
    background: inherit; /* Use the same background as the base slider */
    height: 10px; /* Track height */
    border-radius: 5px; /* Rounded edges */
}

/* Track Styling for Firefox */
input[type="range"]::-moz-range-track {
    background: inherit; /* Use the same background as the base slider */
    height: 10px; /* Track height */
    border-radius: 5px; /* Rounded edges */
}

/* Track Styling for Internet Explorer and Edge */
input[type="range"]::-ms-track {
    background: inherit; /* Use the same background as the base slider */
    height: 10px; /* Track height */
    border-color: transparent; /* Remove borders */
    color: transparent; /* Remove color */
}

/* Thumb Styling */
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none; /* Remove default thumb styling */
    appearance: none; /* Remove default thumb styling */
    width: 20px; /* Thumb width */
    height: 20px; /* Thumb height */
    background: #000; /* Thumb color */
    border-radius: 50%; /* Circular thumb */
    cursor: pointer; /* Pointer cursor */
    margin-top: -5px; /* Center thumb vertically on the track */
}

input[type="range"]::-moz-range-thumb {
    width: 20px;
    height: 20px;
    background: #000;
    border-radius: 50%;
    cursor: pointer;
}

input[type="range"]::-ms-thumb {
    width: 20px;
    height: 20px;
    background: #000;
    border-radius: 50%;
    cursor: pointer;
}

/* Active Thumb Styling */
input[type="range"]::-webkit-slider-thumb:active {
    transform: scale(1.1); /* Slight scale-up effect */
}

/* Safari Quirk Adjustment */
input[type="range"]::-webkit-slider-runnable-track {
    background: inherit; /* Use the main slider background */
}
How It Works
Ticks on Track:
A linear-gradient is used as the background for the slider track.
The positions of the ticks are defined by alternating colors (e.g., #ddd for no tick, #000 for the tick).
Each tick is styled as a narrow segment (e.g., 20% to 21% for one tick).
Custom Thumb Styling:
The thumb is circular and styled separately to be visible against the track.
Dynamic Positioning of Ticks:
The tick positions align with the min, max, and step values of the slider.
You can adjust the percentages in the linear-gradient to match the exact number and location of ticks.
Example
For a slider with:

min: 1
max: 5
step: 1
The percentages in the linear-gradient divide the track into 5 equal segments:

0% to 20% (tick at 20% for step 1)
20% to 40% (tick at 40% for step 2), and so on.
This code visually marks where the thumb should stop on the track for each step. If you'd like further refinements (e.g., numbers under the ticks), let me know!






Vous avez dit :
index.html
Fichier
script.js
JavaScript
styles.css
Fichier
Can you adapt it to my code? Not to your random example?

ChatGPT
To adapt your current code to add ticks on the slider track itself, I’ll modify your CSS code for input[type="range"] so that the ticks appear visually aligned with the steps. Here’s how to do it:

Updated Code for Ticks on Slider Track
Update CSS (styles.css)

/* Universal Slider Styling with Ticks */
input[type="range"] {
    -webkit-appearance: none; /* Remove default styling for WebKit browsers */
    appearance: none; /* Remove default styling */
    width: 100%; /* Full width */
    height: 10px; /* Height of the track */
    background: linear-gradient(
        to right,
        #ddd 0%, /* Default track color */
        #ddd 33%, /* Ticks positioned at steps */
        #000 33%, /* Tick color */
        #000 34%, /* Slight width for tick */
        #ddd 34%,
        #ddd 66%, /* Repeat for additional ticks */
        #000 66%,
        #000 67%,
        #ddd 67%,
        #ddd 100%
    ); /* Add ticks dynamically based on steps */
    outline: none; /* Remove outline */
    border-radius: 5px; /* Rounded track edges */
    cursor: pointer; /* Pointer cursor */
}

/* Custom Thumb for WebKit Browsers (Chrome, Safari, Edge) */
input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none; /* Override default thumb */
    appearance: none; /* Override default thumb */
    background: url('effect/clap.png') no-repeat center; /* Use only the image */
    background-size: contain; /* Scale the image to fit the thumb area */
    width: 40px; /* Set thumb width */
    height: 40px; /* Set thumb height */
    margin-top: -15px; /* Adjust to vertically center on the track (half of thumb height - half of track height) */
    border: none; /* Remove border */
    box-shadow: none; /* Remove shadow */
    cursor: pointer; /* Enable interaction */
    position: relative; /* Ensure proper positioning */
}

/* Custom Thumb for Firefox */
input[type="range"]::-moz-range-thumb {
    background: url('effect/clap.png') no-repeat center; /* Use only the image */
    background-size: contain; /* Scale the image to fit the thumb area */
    width: 40px; /* Set thumb width */
    height: 40px; /* Set thumb height */
    margin-top: -15px; /* Adjust to vertically center on the track */
    border: none; /* Remove border */
    box-shadow: none; /* Remove shadow */
    cursor: pointer; /* Enable interaction */
}

/* Custom Thumb for Internet Explorer and Edge */
input[type="range"]::-ms-thumb {
    background: url('effect/clap.png') no-repeat center; /* Use only the image */
    background-size: contain; /* Scale the image to fit the thumb area */
    width: 40px; /* Set thumb width */
    height: 40px; /* Set thumb height */
    margin-top: -15px; /* Adjust to vertically center on the track */
    border: none; /* Remove border */
    box-shadow: none; /* Remove shadow */
    cursor: pointer; /* Enable interaction */
}

/* Universal Slider Styling */
input[type="range"] {
    -webkit-appearance: none; /* Remove default styling for WebKit browsers */
    appearance: none; /* Remove default styling */
    width: 100%; /* Full width */
    height: 10px; /* Height of the track */
    background: #ddd; /* Track background color */
    outline: none; /* Remove outline */
    border-radius: 5px; /* Rounded track edges */
}

/* Track Styling for WebKit Browsers */
input[type="range"]::-webkit-slider-runnable-track {
    background: #ddd; /* Track background */
    height: 10px; /* Track height */
    border-radius: 5px; /* Rounded edges */
    cursor: pointer; /* Pointer cursor */
}

/* Track Styling for Firefox */
input[type="range"]::-moz-range-track {
    background: #ddd; /* Track background */
    height: 10px; /* Track height */
    border-radius: 5px; /* Rounded edges */
}

/* Track Styling for Internet Explorer and Edge */
input[type="range"]::-ms-track {
    background: transparent; /* Remove default styling */
    height: 10px; /* Track height */
    border-color: transparent; /* Remove borders */
    color: transparent; /* Remove color */
}

/* Adjust for Safari Quirks */
input[type="range"]::-webkit-slider-thumb:active {
    transform: scale(1.05); /* Slight scale on interaction (optional) */
    cursor: grabbing; /* Grabbing cursor during drag (optional) */
}

/* Custom Track Styling */
input[type="range"]::-webkit-slider-runnable-track {
    background: #ddd; /* Track background */
    height: 10px;
    border-radius: 5px;
}

input[type="range"]::-moz-range-track {
    background: #ddd;
    height: 10px;
    border-radius: 5px;
}

input[type="range"]::-ms-track {
    background: transparent;
    border-color: transparent;
    color: transparent;
    height: 10px;
}

/* Optional: Adding hover effect for film frames */
.frame:hover {
    transform: scale(1.02); /* Slight zoom on hover */
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
}

/* Related articles title */
.frame-content h3 {
    font-family: Arial, sans-serif; /* Match with body text */
    font-size: 1.2rem;
    color: #444; /* Slightly darker gray for emphasis */
    margin-top: 20px; /* Add spacing above */
    margin-bottom: 10px;
}

/* Styling the links list */
.links-list {
    list-style-type: none; /* Remove default list bullets */
    padding: 0; /* Remove padding */
    margin: 0;
}

/* Styling individual links */
.links-list li {
    margin-bottom: 10px; /* Add space between links */
}

/* Styling individual links container */
.links-container {
    position: absolute; /* Absolute positioning relative to the frame */
    top: 10px; /* Adjust position from the top */
    left: 50%;
    transform: translateX(-50%);
    z-index: 3; /* Ensure links are above the video */
    padding: 10px;
    background-color: rgba(255, 255, 255, 0.7); /* Optional: background with transparency */
    border-radius: 5px;
    width: 90%; /* Adjust width as needed */
    text-align: center;
    z-index: 3; /* Ensure links are above the video */
}

/* Styling individual links */
.links-container a {
    font-family: Arial, sans-serif;
    font-size: 1.2rem;
    color: #0066cc; /* Link color */
    text-decoration: none;
    transition: color 0.3s ease;
    z-index: 4; /* Ensure links have the highest z-index */
}

.links-container a:hover {
    color: #003366; /* Darker blue on hover */
    text-decoration: underline;
}

/* List styling for the diversity criteria */
ul {
    margin: 20px 0;
    padding-left: 20px;
}

/* Sub-list styling for nested items */
ul ul {
    margin-top: 10px;
}

/* Strong emphasis for sub-headings in lists */
ul li strong {
    font-size: 1.2rem;
    color: #333;
}

/* General paragraph styling */
p {
    font-size: 1.1rem;
    color: #333;
    margin-bottom: 20px;
    line-height: 1.6;
}

/* Apply Arial font to the specific sections */
.arial-font {
    font-family: 'Arial', sans-serif;
}

/* Optional: Add a hover effect for the frame */
.frame:hover {
    transform: scale(1.02);
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
}

/* Movie sections */
.movie {
    display: flex;
    justify-content: space-between;
    margin-bottom: 20px;
    align-items: center;
    padding: 15px;
    background-color: rgba(255, 255, 255, 0.9); /* Slight background transparency */
    border-radius: 5px;
}

.movie-left {
    width: 45%;
    text-align: center;
}

.movie-image {
    width: 100%;
    max-width: 200px;
    height: auto;
    border-radius: 5px;
    margin-top: 10px;
}

.movie-right {
    width: 50%;
    padding-left: 20px;
}

.movie-right p {
    font-size: 1rem;
    color: #333;
    margin-bottom: 10px;
    line-height: 1.6;
}

/* Optional: Style for plot and details */
.movie-right strong {
    font-size: 1.1rem;
    color: #333;
}

/* Style for the quiz frame */
.quiz-frame {
    width: 60%;                /* Adjust the width of the frame */
    margin: 30px auto;         /* Center the frame horizontally */
    padding: 20px;             /* Space inside the frame */
    border: 5px solid #000;    /* Black border around the frame */
    border-radius: 10px;       /* Rounded corners for the frame */
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2); /* Shadow effect for depth */
    background-color: #000000; 
    text-align: center;        /* Center text inside the frame */
    position: relative;        /* Ensure we can position the results above this */
    z-index: 1;
}

/* Style for the results container */
.results-container {
    position: absolute; /* Position the results bar above the quiz content */
    top: 20px;          /* Space from the top of the frame */
    left: 0;
    width: 80%;        /* Full width */
    display: none;      /* Initially hidden */
    z-index: 2;         /* Ensures it's above the quiz buttons */
}

/* Result bars styling (Restored original color scheme) */
.result-bar {
    font-size: 1rem;
    padding: 5px;
    margin: 5px 0;
    color: white;
    background-color: #606060;
    border-radius: 5px;
    text-align: center;
    transition: width 0.5s;
}

/* Style for the quiz question and buttons */
.quiz-question p {
    font-size: 24px;
    margin-bottom: 20px;
    color: #FFFFFF;
}

.quiz-btn {
    font-size: 18px;
    padding: 10px 20px;
    margin: 10px;
    cursor: pointer;
    border: none;
    border-radius: 5px;
    background-color: #303030;  
    color: white;
    transition: background-color 0.3s;
    z-index: 3; 
}

.quiz-btn:hover {
    background-color:  #404040;
}

/* Style for the image container */
.image-container {
    margin-top: 20px;           /* Space above the image */
    z-index:1;
}

.image {
    max-width: 100%;            /* Make image fill the width of its container */
    height: auto;               /* Maintain aspect ratio of the image */
    border-radius: 5px;         /* Optional: Round corners of the image */
}

/* Scroll indicator container */
.scroll-indicator {
    text-align: center;
    margin-top: 10px; /* Space above the indicator */
    animation: fadeInOut 2s infinite; /* Add a pulsing animation for visibility */
}

/* Scroll text styling */
.scroll-text {
    font-size: 1rem;
    color: #333; /* Dark gray for readability */
    margin-bottom: 5px;
}

/* Arrow styling */
.arrow {
    font-size: 2rem; /* Larger font for visibility */
    color: #333; /* Match the text color */
}

/* Animation for the arrow to fade in and out */
@keyframes fadeInOut {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.5;
    }
}

* Trend Images Styling */
.trend-images {
    display: flex;
    gap: 15px;
    margin-top: 20px;
    justify-content: center;
}

.trend-images img {
    max-width: 45%;
    height: auto;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    transition: transform 0.3s ease;
}

.trend-images img:hover {
    transform: scale(1.05);
}
